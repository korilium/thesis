cd(@__DIR__)
using Pkg; Pkg.activate("."); Pkg.instantiate
using AbstractTrees, GraphRecipes, Plots


AbstractTrees.children(d::Dict) = [p for p in d]
AbstractTrees.children(p::Pair) = AbstractTrees.children(p[2])
function AbstractTrees.printnode(io::IO, p::Pair)
    str = isempty(AbstractTrees.children(p[2])) ? string(p[1]) : string(p[1])
    print(io, str)
end
AbstractTrees.parentlinks(p)


d = Dict(:Reinforcement_Learning =>Dict(:Machine_Learning => Dict(:Engineering => 4,:Computer_Science => "Hello", :Nueroscience => 5),:e => 5.0))

default(size=(1000, 1000))

plot(TreePlot(d), method=:tree, fontsize=10, nodeshape=:ellipse)

